import { ParserField, ParserTree, Value } from "../Models";
export declare const mutate: (tree: ParserTree, allNodes: ParserField[]) => {
    updateFieldOnNode: (node: ParserField, i: number, updatedField: ParserField, parentNode?: string) => void;
    addFieldToNode: (node: ParserField, f: ParserField) => void;
    renameRootNode: (node: ParserField, newName: string) => void;
    removeNode: (node: ParserField) => void;
    implementInterface: (node: ParserField, interfaceNode: ParserField) => void;
    deImplementInterface: (node: ParserField, interfaceName: string) => void;
    setValueNode: (node: ParserField, value: string) => void;
    removeAllDirectives: () => void;
};
export declare const checkValueType: (node: ParserField, nodes: ParserField[]) => Value.Variable | Value.IntValue | Value.FloatValue | Value.StringValue | Value.BooleanValue | Value.EnumValue | Value.ListValue | Value.ObjectValue | Value.IDValue | Value.ScalarValue;
